name: Release

on:
  push:
    branches: [ main ]
    paths:
      - "src/**"
      - "templates/**"
      - "scripts/**"
      - "tests/**"
      - "playwright.config.ts"
      - "package.json"
      - "bun.lockb"
      - "tsconfig.json"
      - "biome.json"
      - ".changeset/**"

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install
    
    - name: Install dependencies for templates
      run: bun install --cwd=templates
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
    
    - name: Lint and typecheck
      run: |
        bun run lint
        bun run typecheck
    
    - name: Build project
      run: bun run build
    
    - name: Make test scripts executable
      run: chmod +x tests/test-runner.sh
    
    - name: Run comprehensive 12-scenario test suite
      run: |
        echo "Starting unified test suite with 12 comprehensive scenarios..."
        # Run comprehensive testing - one monorepo with all apps, 12 scenarios
        # Tests all combinations: linting (ESLint+Prettier/Biome) × ORM (Prisma/Drizzle/None) × packages (All/None)
        ./tests/test-runner.sh --mode=full
        # 
        # Optional: Add Playwright browser tests (increases CI time significantly)
        # ./tests/test-runner.sh --mode=full --playwright
    
    - name: Upload test artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: |
          /tmp/create-bun-monorepo/
          /tmp/*.log
        retention-days: 3
    
    - name: Upload Playwright report on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: |
          tests/playwright-report/
          test-results.json
        retention-days: 7
    
    - name: Test summary
      if: success()
      run: |
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "✅ Comprehensive 12-scenario test suite completed successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Tested Configurations:**" >> $GITHUB_STEP_SUMMARY
        echo "- 6 Linting/ORM combinations (ESLint+Prettier/Biome × Prisma/Drizzle/None)" >> $GITHUB_STEP_SUMMARY
        echo "- 2 Package variants (All packages vs No packages)" >> $GITHUB_STEP_SUMMARY  
        echo "- 10 App templates (React, Next.js, Express, etc.)" >> $GITHUB_STEP_SUMMARY
        echo "- 7 Package templates (UI, Utils, Hooks, etc. + blank)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Validations Performed:**" >> $GITHUB_STEP_SUMMARY
        echo "- Code quality (TypeScript, linting, building)" >> $GITHUB_STEP_SUMMARY
        echo "- ORM schema generation & migration" >> $GITHUB_STEP_SUMMARY

    - name: Test failure summary
      if: failure()
      run: |
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "❌ 12-scenario test suite failed" >> $GITHUB_STEP_SUMMARY
        echo "Check the job logs and uploaded artifacts for details." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Expected validations:**" >> $GITHUB_STEP_SUMMARY
        echo "- 12 comprehensive scenarios (6 configs × 2 package variants)" >> $GITHUB_STEP_SUMMARY
        echo "- All app templates (React Vite, Next.js, Express, etc.)" >> $GITHUB_STEP_SUMMARY
        echo "- All package templates (UI, Utils, Hooks, etc.)" >> $GITHUB_STEP_SUMMARY
        echo "- Code quality checks (TypeScript, linting, building)" >> $GITHUB_STEP_SUMMARY
        echo "- ORM functionality (Prisma/Drizzle schema & migration)" >> $GITHUB_STEP_SUMMARY

  release:
    needs: test # Only runs after tests succeed
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install

      - name: Install dependencies for templates
        run: bun install --cwd=templates

      - name: Run Type Check
        run: bun run typecheck

      - name: Run Linting
        run: bun run lint

      - name: Build Package
        run: bun run build

      - name: Release
        id: changesets
        uses: changesets/action@v1
        with:
          version: bun run changeset:version
          publish: bun run release
          title: "Version Packages"
          commit: "Version Packages"
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
